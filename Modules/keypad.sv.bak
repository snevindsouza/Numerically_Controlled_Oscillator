`timescale 1ns / 1ps
module Keypad (
	input clk,
	input [3:0] row,
	output reg [3:0] col,
	output reg [3:0] value [0:3]
);

//temporary values
integer j;
reg en;  
reg [3:0] val;

initial begin
	j = 0;
	en = 1;
	col = 4'b0001;
	value[0] = 4'b0000;
	value[1] = 4'b0000;
	value[2] = 4'b0000;
	value[3] = 4'b0000;
end
//Read valuse from matrix keypad
always @(posedge clk) begin
	if (col==4'b0001) begin
		if (row[0]==1 && en)begin val = 4'h0; en = 0; end
		else if (row[1]==1 && en)begin val = 4'h4; en = 0; end
		else if (row[2]==1 && en)begin val = 4'h8; en = 0; end
		else if (row[3]==1 && en)begin val = 4'hc; en = 0; end
	end
	else if (col==4'b0010) begin
		if (row[0]==1 && en)begin val = 4'h1; en = 0; end
		else if (row[1]==1 && en)begin val = 4'h5; en = 0; end
		else if (row[2]==1 && en)begin val = 4'h9; en = 0; end
		else if (row[3]==1 && en)begin val = 4'hd; en = 0; end
	end
	else if (col==4'b0100) begin
		if (row[0]==1 && en)begin val = 4'h2; en = 0; end
		else if (row[1]==1 && en)begin val = 4'h6; en = 0; end
		else if (row[2]==1 && en)begin val = 4'ha; en = 0; end
		else if (row[3]==1 && en)begin val = 4'he; en = 0; end
	end
	else if (col==4'b1000) begin
		if (row[0]==1 && en)begin val = 4'h3; en = 0; end
		else if (row[1]==1 && en)begin val = 4'h7; en = 0; end
		else if (row[2]==1 && en)begin val = 4'hb; en = 0; end
		else if (row[3]==1 && en)begin val = 4'hf; en = 0; end
	end
	col = ({col[2:0],col[3]});

	//logic to store multiple digits
	if (~en && ~row) begin
		if (value[0] == 0)begin 
			value[0] = val; 
			val = 0;
			j = j+1;
			if (j == 1000000) begin
				j = 0;
				en = 1; 
			end
		end else if (value[0] !=0 && value[1] == 0)begin 
			value[1] = val; 			
			val = 0;
			j = j+1;
			if (j == 1000000) begin
				j = 0;
				en = 1; 
			end 
		end else if (value[0] !=0 && value[1] != 0 && value[2] == 0)begin 
			value[2] = val;			
			val = 0;
			j = j+1;
			if (j == 1000000) begin
				j = 0;
				en = 1; 
			end
		end else if (value[0] !=0 && value[1] != 0 && value[2] != 0 && value[3] == 0)begin 
			value[3] = val; 			
			val = 0;
			j = j+1;
			if (j == 1000000) begin
				j = 0;
				en = 1; 
			end
		end
	end
end

endmodule 